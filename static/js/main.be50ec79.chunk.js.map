{"version":3,"sources":["components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","utils/getRandomColor.js","components/Profile/Profile.styled.js","components/Profile/Profile.jsx","components/FriendListItem/FriendListItem.styled.jsx","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.styled.js","components/FriendList/FriendLits.jsx","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.jsx","components/Container/Container.styled.jsx","components/Container/Container.js","components/App.jsx","index.js"],"names":["SectionStatistics","styled","section","StatisticsTitle","h2","StatList","ul","Item","li","ItemLabel","span","ItemPercentage","Statistics","title","stats","map","id","label","percentage","style","backgroundColor","Math","floor","random","toString","ProfileCard","div","Description","Avatar","img","ProfileName","p","ProfileTag","ProfileLocation","Stats","Label","Quantity","Profile","props","name","tag","location","avatar","followers","views","likes","src","alt","Chip","eventStatus","FriendAvatar","FriendName","FriendListItem","isOnline","width","List","FriendList","friends","Transaction","table","TransactionHistory","transactions","type","amount","currency","MainContainer","Container","children","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be50ec79.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const SectionStatistics = styled.section`\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 500px;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nexport const StatisticsTitle = styled.h2`\r\n  margin-top: 60px;\r\n  text-align: center;\r\n  justify-content: center;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const StatList = styled.ul`\r\n  display: flex;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  list-style: none;\r\n  \r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  margin: 15px;\r\n  justify-content: center;\r\n  align-items: center;\r\n flex-flow: column;\r\n  font-size: 15px;\r\n  margin: 0;\r\n  width: 150px;\r\n\r\n\r\n`;\r\n\r\n\r\nexport const ItemLabel = styled.span`\r\n    font-size: 10x;\r\n  \r\n`;\r\n\r\nexport const ItemPercentage = styled.span`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  \r\n`;","import PropTypes from 'prop-types';\nimport getRandomColor from '../../utils/getRandomColor';\nimport {\n  SectionStatistics, StatisticsTitle, StatList, Item,\n  ItemLabel, ItemPercentage,\n} from './Statistics.styled';\n\nexport const Statistics = ({ title, stats }) => (\n  <SectionStatistics>\n    {title && <StatisticsTitle>{title}</StatisticsTitle>}\n\n    <StatList>\n      {stats.map(({ id, label, percentage }) => (\n        <Item\n          key={id}\n          style={{ backgroundColor: getRandomColor() }}\n        >\n          <ItemLabel>{label}</ItemLabel>\n          <ItemPercentage>{percentage}%</ItemPercentage>\n        </Item>\n      ))}\n    </StatList>\n  </SectionStatistics>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","export default () => {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const ProfileCard = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 300px;\r\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\r\n    5px 5px 15px 5px rgba(238, 255, 247, 0);\r\n  background-color: rgb(248, 247, 239);\r\n`;\r\n\r\nexport const Description = styled.div`\r\n text-align: center;\r\n  color: gray;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n    width: 35%;\r\n  padding: 0;\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 505px;\r\n`;\r\n\r\nexport const ProfileName = styled.p`\r\nfont-weight: bold;\r\n  color: black;\r\n`;\r\n\r\nexport const ProfileTag = styled.p`\r\nfont-weight: normal`;\r\n\r\nexport const ProfileLocation = styled.p`\r\ncolor: rgb(112, 107, 107)\r\n`;\r\n\r\nexport const Stats = styled.ul`\r\n  background-color: rgb(218, 214, 214);\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 40px;\r\n  padding: 0;\r\n  box-shadow: 0px 3px 0px 2px rgba(0, 0, 0, 0.1),\r\n    0px 6px 0px 4px rgba(0, 0, 0, 0.1), 0px 9px 0px 6px rgba(0, 0, 0, 0.1),\r\n    0px 12px 0px 8px rgba(0, 0, 0, 0.1), 0px 15px 0px 10px rgba(0, 0, 0, 0.1),\r\n    0px 18px 0px 12px rgba(0, 0, 0, 0.1), 0px 21px 0px 14px rgba(0, 0, 0, 0.1),\r\n    0px 24px 0px 16px rgba(0, 0, 0, 0.1), 0px 27px 0px 18px rgba(0, 0, 0, 0.1),\r\n    0px 30px 0px 20px rgba(0, 0, 0, 0.1), 5px 5px 15px 5px rgba(0, 0, 0, 0);\r\n  background: #444444\r\n  `;\r\n\r\nexport const Label = styled.span`\r\ncolor: rgb(247, 242, 242);\r\n  display: flex;\r\n  margin: 5xp\r\n  `;\r\n\r\nexport const Quantity = styled.span`\r\nbox-shadow: blue;\r\n  color: rgb(10, 10, 10);\r\n  font-weight: bolder;\r\n  margin: 5px\r\n  `;","import PropTypes from 'prop-types';\nimport {\n  ProfileCard, Description, Avatar, ProfileName,\n  ProfileTag, ProfileLocation, Stats, Label, Quantity\n} from './Profile.styled';\n\nexport const Profile = props => {\n  const {\n    name,\n    tag,\n    location,\n    avatar,\n    stats: { followers, views, likes },\n  } = props;\n\n  return (\n    <ProfileCard>\n      <Description>\n        <Avatar src={avatar} alt={name} />\n        <ProfileName>{name}</ProfileName>\n        <ProfileTag>@{tag}</ProfileTag>\n        <ProfileLocation>{location}</ProfileLocation>\n      </Description>\n\n      <Stats>\n        <li>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </li>\n        <li>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </li>\n        <li>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </li>\n      </Stats>\n    </ProfileCard >\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\n  align-items: center;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  width: 350px;\r\n  height: 100px;\r\n  `;\r\n\r\nexport const Chip = styled.span`\r\n display: flex;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 5px;\r\n  margin-right: 15px;\r\n  background-color:${({ eventStatus }) => (\r\n        eventStatus\r\n    )};\r\n`;\r\n\r\nexport const FriendAvatar = styled.img`\r\nmargin-right: 20px;\r\n`;\r\n\r\nexport const FriendName = styled.p`\r\nfont-weight: bold;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { Item, Chip, FriendAvatar, FriendName } from './FriendListItem.styled';\n\nexport const FriendListItem = ({ avatar, name, isOnline, id }) => (\n  <Item key={id}>\n    <Chip eventStatus={isOnline ? 'green' : 'red'}></Chip>\n    <FriendAvatar src={avatar} alt={name} width=\"48\" />\n    <FriendName>{name}</FriendName>\n  </Item>\n);\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n`;","import PropTypes from 'prop-types';\nimport { FriendListItem } from '../FriendListItem/FriendListItem';\nimport { List } from './FriendList.styled';\n\nexport const FriendList = ({ friends }) => (\n  <List>\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <FriendListItem\n        key={id}\n        isOnline={isOnline}\n        avatar={avatar}\n        name={name}\n      />\n    ))}\n  </List>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape),\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Transaction = styled.table`\r\nwidth: 750px;\r\n  height: 30px;\r\n  font-size: 25px;\r\n\r\n  tr {\r\n    height: 50px;\r\n    color: lightslategrey;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n}\r\n\r\nth {\r\n    text-transform: uppercase;\r\n    color: rgb(243, 241, 241);\r\n    background-color: rgb(44, 160, 160);\r\n}\r\n\r\ntd {\r\n    width: 200px;\r\n}\r\n\r\n tr: nth-child(2n) {\r\n    background-color: rgb(216, 232, 247);\r\n}\r\n`;\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\nimport { Transaction } from './TransactionHistory.styled';\n\nexport const TransactionHistory = ({ transactions }) => (\n  <Transaction>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {transactions.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </Transaction>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const MainContainer = styled.div`\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    padding-top: 40px;\r\n    margin-right: auto;\r\n`;","import { MainContainer } from './Container.styled';\n\nfunction Container({ children }) {\n  return <MainContainer>{children}</MainContainer>;\n}\n\nexport default Container;\n","import friends from '../data/friends.json';\nimport user from '../data/user.json';\nimport statisticalData from '../data/statistical-data.json';\nimport transactions from '../data/transactions.json';\n\nimport { Statistics } from './Statistics/Statistics';\nimport { Profile } from './Profile/Profile';\nimport { FriendList } from './FriendList/FriendLits';\nimport { TransactionHistory } from './TransactionHistory/TransactionHistory';\nimport Container from './Container/Container';\n\nexport const App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />,\n      <Statistics stats={statisticalData} />,\n      <FriendList friends={friends} />,\n      <TransactionHistory transactions={transactions} />;\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}